# Put in config/nginx.conf.erb if using the Heroku NGINX buildpack

daemon off;

worker_processes <%= ENV["NGINX_WORKERS"] || 4 %>;

events {
  use epoll;
  accept_mutex on;
  multi_accept on;
  worker_connections 1024;
}

http {
  gzip on;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";
  gzip_comp_level 2;
  gzip_min_length 512;
  gzip_proxied any;
  gzip_vary on;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  server_tokens off;

  tcp_nopush on;
  tcp_nodelay on;

  log_format l2met "measure#nginx.service=$request_time request_id=$http_x_request_id";
  access_log logs/nginx/access.log l2met;
  error_log logs/nginx/error.log;

  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  server {
    listen <%= ENV["PORT"] %>;
    server_name _;
    keepalive_timeout 5;
    root <%= ENV["ROOT_DIRECTORY"] || 'html' %>;
    index index.html;
    try_files $uri.html $uri/ $uri =404;
    resolver 8.8.8.8;
    port_in_redirect off;

    <% if ENV["FORCE_HTTPS"] %>
      if ( $http_x_forwarded_proto != 'https' ) {
        return 301 https://$host$request_uri;
      }
    <% end %>

    <% if ENV["BASIC_AUTH_USER"] && ENV["BASIC_AUTH_PASSWORD"] %>
      auth_basic "Restricted";
      auth_basic_user_file <%= "#{ENV["HOME"]}/config/htpasswd" %>;
    <% end %>

    # Write .html to clean URLs I
    if (!-f "${request_filename}index.html") {
        rewrite ^/(.*)/$ /$1 permanent;
    }

    # Write .html to clean URLs II
    if ($request_uri ~* ".html") {
      rewrite (?i)^(.*)/(.*)\.html $1/$2 permanent;
    }

    location / {
      expires off;
      try_files $uri.html $uri $uri/ <%= ENV["REDIRECT_NOT_FOUND_TO"] || '' %> =404;
      <% if ENV["NGINX_DEBUG"] %>add_header Nginx-Base-Location on;<% end %>
    }

    location ~ /\. {
      deny all;
      <% if ENV["NGINX_DEBUG"] %>add_header Nginx-Denied on;<% end %>
    }

    location ~*  \.(jpg|jpeg|png|gif|svg|ico|css|js|woff|woff2|ttf|woff|eot)$ {
       expires 31d;
    }

  }
}